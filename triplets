process.stdin.resume();

process.stdin.setEncoding('ascii');

var input_stdin = "";
var input_stdin_array = "";
var input_currentline = 0;

process.stdin.on('data', function (data) {
    input_stdin += data;
});

process.stdin.on('end', function () {
    input_stdin_array = input_stdin.split("\n");
    main();    
});

function readLine() {
    return input_stdin_array[input_currentline++];
}

/////////////// ignore above this line ////////////////////
var alicePoints=0;
var bobPoints=0;
var result=[];
function solve(a0, a1, a2, b0, b1, b2){
    
      if (a0 < b0) {
          bobPoints +=1; 
      }  else if (a0 > b0){
           alicePoints +=1;
      };
    
      if (a1 < b1) {
          bobPoints +=1; 
      }  else if (a1 > b1) {
           alicePoints +=1;
      };
    
      if (a2 < b2) {
          bobPoints +=1; 
      } else if (a2 > b2) {
          alicePoints +=1;
      };  
    
    if ((a0 = b0) || (a1 = b1) || (a2 = b2)) {
         bobPoints += 0;
         alicePoints += 0;
    };
    
      result.push(bobPoints);
      result.push(alicePoints);
    return result;
};  

function main() {
    var a0_temp = readLine().split(' ');
    var a0 = parseInt(a0_temp[0]);
    var a1 = parseInt(a0_temp[1]);
    var a2 = parseInt(a0_temp[2]);
    var b0_temp = readLine().split(' ');
    var b0 = parseInt(b0_temp[0]);
    var b1 = parseInt(b0_temp[1]);
    var b2 = parseInt(b0_temp[2]);
    var result = solve(a0, a1, a2, b0, b1, b2);
    console.log(result.join(" "));
    


}



process.stdin.resume();
process.stdin.setEncoding('ascii');

var input_stdin = "";
var input_stdin_array = "";
var input_currentline = 0;

process.stdin.on('data', function (data) {
    input_stdin += data;
});

process.stdin.on('end', function () {
    input_stdin_array = input_stdin.split("\n");
    main();    
});

function readLine() {
    return input_stdin_array[input_currentline++];
}

/////////////// ignore above this line ////////////////////
var alicePoints=0;
var bobPoints=0;
var result=[];
function solve(a0, a1, a2, b0, b1, b2){
    
      if ((a0 >= 1 && a0 <= 100) && (a1 >= 1 && a1 <= 100) && (a2 >= 1 && a2 <= 100) && (b0 >= 1 && b0 <= 100) && (b1 >= 1 && b1 <= 100) && (b2 >= 1 && b2 <= 100)) {
          
      if (a0 < b0) {
          bobPoints +=1; 
      }  else if (a0 > b0){
           alicePoints +=1;
      };
    
      if (a1 < b1) {
          bobPoints +=1; 
      }  else if (a1 > b1) {
           alicePoints +=1;
      };
    
      if (a2 < b2) {
          bobPoints +=1; 
      } else if (a2 > b2) {
          alicePoints +=1;
      };  
    
      if ((a0 = b0) || (a1 = b1) || (a2 = b2)) {
         bobPoints += 0;
         alicePoints += 0;
      };
      } else {
         bobPoints += 0;
         alicePoints += 0;
      };
    
      result.push(bobPoints);
      result.push(alicePoints);
      return result;
};  

function main() {
    var a0_temp = readLine().split(' ');
    var a0 = parseInt(a0_temp[0]);
    var a1 = parseInt(a0_temp[1]);
    var a2 = parseInt(a0_temp[2]);
    var b0_temp = readLine().split(' ');
    var b0 = parseInt(b0_temp[0]);
    var b1 = parseInt(b0_temp[1]);
    var b2 = parseInt(b0_temp[2]);
    var result = solve(a0, a1, a2, b0, b1, b2);
    console.log(result.join(" "));
}





process.stdin.resume();
process.stdin.setEncoding('ascii');

var input_stdin = "";
var input_stdin_array = "";
var input_currentline = 0;

process.stdin.on('data', function (data) {
    input_stdin += data;
});

process.stdin.on('end', function () {
    input_stdin_array = input_stdin.split("\n");
    main();    
});

function readLine() {
    return input_stdin_array[input_currentline++];
}

/////////////// ignore above this line ////////////////////
var alicePoints=0;
var bobPoints=0;
var result=[];
function solve(a0, a1, a2, b0, b1, b2){
    
      if ((a0 >= 1 && a0 <= 100) && (a1 >= 1 && a1 <= 100) && (a2 >= 1 && a2 <= 100) && (b0 >= 1 && b0 <= 100) && (b1 >= 1 && b1 <= 100) && (b2 >= 1 && b2 <= 100)) {
          
      if (a0 < b0) {
          bobPoints +=1; 
      }  else if (a0 > b0){
           alicePoints +=1;
      };
    
      if (a1 < b1) {
          bobPoints +=1; 
      }  else if (a1 > b1) {
           alicePoints +=1;
      };
    
      if (a2 < b2) {
          bobPoints +=1; 
      } else if (a2 > b2) {
          alicePoints +=1;
      };  
    
      if ((a0 = b0) || (a1 = b1) || (a2 = b2)) {
         bobPoints += 0;
         alicePoints += 0;
      };
      } else {
         bobPoints += 0;
         alicePoints += 0;
      };
    
      result.push(bobPoints);
      result.push(alicePoints);
      return result;
};  

function main() {
    var a0_temp = readLine().split(' ');
    var a0 = parseInt(a0_temp[0]);
    var a1 = parseInt(a0_temp[1]);
    var a2 = parseInt(a0_temp[2]);
    var b0_temp = readLine().split(' ');
    var b0 = parseInt(b0_temp[0]);
    var b1 = parseInt(b0_temp[1]);
    var b2 = parseInt(b0_temp[2]);
    var result = solve(a0, a1, a2, b0, b1, b2);
    console.log(result.join(" "));
}
function bound_error (args) {
    if (args.length !== 6) return true;
    for (var i = 0; i < args.length; i++) {
        if (isNaN(args[i])) return true;
        if (args[i] < 0 || args[i] > 100) return true;
    }
    return false;
}

function solve(a0, a1, a2, b0, b1, b2) {
    if (bound_error(arguments)) return "Input Error";
    var a = 0, b = 0;
    if (a0 > b0) a++;
    if (a1 > b1) a++;
    if (a2 > b2) a++;
    if (b0 > a0) b++;
    if (b1 > a1) b++;
    if (b2 > a2) b++;
    console.log(a, b);
    return 0;
}
